# Listener class name
logger.listener.class=com.niara.logger.listeners.DirectoryWatcherListener


# Directory to watch for incoming log files.
logger.listener.input.directory=/dev/shm/logger-in


# Listener poll timeout in milli-seconds.
logger.listener.poll.interval=10


logger.listener.poll.unit=milliseconds


# Listener to LogReader logReaderToLogParser class name
logger.listener.logReaderToLogParser.class=com.niara.logger.handlers.FileToLogReaderHandler


# Thread pool for reading log lines.
logger.readers.pool=10


logger.reader.monitor.poll.interval=10


logger.reader.monitor.poll.unit=milliseconds


# Thread pool for parsing logs.
logger.parsers.pool=20


# Length of parsers queue, any request beyond that will wait.
# It is implemented using Semaphore.
logger.parsers.queue.length=20


# Amount of time(seconds) that is being measured for rate limiting logs
logger.parsers.logging.rate-limit.interval=1


# Amount of logs, that have to occur in the interval(logger.parsers.logging.rate-limit.interval) to trigger rate limiting of logs
logger.parsers.logging.rate-limit.rate=2


logger.parser.monitor.poll.interval=10


logger.parser.monitor.poll.unit=milliseconds


logger.parser.semaphore.monitor.poll.interval=5000


logger.parser.semaphore.monitor.poll.unit=milliseconds


logger.parser.config.directory=/etc/opt/niara/analyzer/logger


logger.writer.class=com.niara.logger.writers.FileWriter


# Directory for parsed output logs.
logger.writer.output.directory=/dev/shm/logtrove-out


# Thread pool for log writers
logger.writers.pool=10


logger.writer.monitor.poll.interval=10


logger.writer.monitor.poll.unit=milliseconds


# Maximum number threads would be
# logger.readers.pool * logger.parsers.pool + logger.writers.pool + ~7
# Be careful about this, it may exceed the system limit or memory!

# Comma separated list of keys to find timestamp field in the parsed JSON.
# Note: Space is hierarchy separator, it is critical to have correct number of space chars.
# It is recommended that all configs have a timestamp or data timestamp in integer/long format.
# Having a string representation of epoch is highly discouraged due to performance reasons
logger.output.timestamp=timestamp,data timestamp,start


logger.output.timestamp.default=0


# Also relevant for the lines parsed by each Log Parser
logger.maxlines.perbatch=10000


logger.statsd.host=localhost


logger.statsd.port=8125


# Periodic stat publishing interval in milliseconds for reader, parser, and writer threads(minutes * 60 * 1000)
logger.stats.interval=60000